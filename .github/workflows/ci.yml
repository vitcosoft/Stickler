name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with .NET ${{ matrix.dotnet-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        dotnet-version: [ '8.0.x' ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run unit tests
      run: dotnet test tests/Stickler.Unit --configuration Release --no-build --logger trx --results-directory TestResults

    - name: Run integration tests
      run: dotnet test tests/Stickler.Integration --configuration Release --no-build --logger trx --results-directory TestResults

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.dotnet-version }}
        path: TestResults/*.trx

  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run benchmarks
      run: |
        cd tests/Stickler.Performance
        dotnet run -c Release --exporters json

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: tests/Stickler.Performance/BenchmarkDotNet.Artifacts/results/*

    - name: Performance regression check
      run: |
        if [ -f "baseline-performance.json" ]; then
          echo "Performance regression detection would run here"
          # TODO: Implement comparison logic
        else
          echo "No baseline found, creating new baseline"
          cp tests/Stickler.Performance/BenchmarkDotNet.Artifacts/results/*.json baseline-performance.json || true
        fi

  package:
    name: Create NuGet Package
    runs-on: ubuntu-latest
    needs: [ test, performance ]
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Pack
      run: dotnet pack src/Stickler/Stickler.csproj --configuration Release --no-build --output ./packages

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./packages/*.nupkg

    - name: Publish to NuGet
      run: dotnet nuget push ./packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      if: github.event_name == 'release'

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run code analysis
      run: dotnet build --configuration Release --verbosity normal

    - name: Format check
      run: dotnet format --verify-no-changes --verbosity diagnostic

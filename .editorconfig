# top-most EditorConfig file
root = true

# All files
[*]
charset = utf-8
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true

# Code files
[*.{cs,csx,vb,vbx}]
indent_style = space
indent_size = 4

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_style = space
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_style = space
indent_size = 2

# JSON files
[*.{json,json5,webmanifest}]
indent_style = space
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_style = space
indent_size = 2

# Markdown files
[*.{md,mdx}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = false

# Web files
[*.{htm,html,js,ts,tsx,css,sass,scss,less,svg}]
indent_style = space
indent_size = 2

# Batch files
[*.{cmd,bat}]
end_of_line = crlf

# Shell scripts
[*.sh]
end_of_line = lf

# C# files
[*.cs]

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = false:warning

# C# preferences

# var preferences
csharp_style_var_elsewhere = false:silent
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = true:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_functions = true:suggestion
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:silent

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = false:silent

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning
csharp_style_allow_embedded_statements_on_same_line_experimental = false:warning

# C# formatting rules

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Nullable reference types
csharp_style_nullable_reference_types = enable:warning

# Code analysis rules

# CA1010: Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = suggestion

# CA1012: Abstract types should not have constructors
dotnet_diagnostic.CA1012.severity = warning

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = suggestion

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = suggestion

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = suggestion

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = suggestion

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = suggestion

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = suggestion

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = suggestion

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = suggestion

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = suggestion

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = suggestion

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = suggestion

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = suggestion

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = warning

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = suggestion

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = suggestion

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = suggestion

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = suggestion

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = suggestion

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = suggestion

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = suggestion

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = suggestion

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = suggestion

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = suggestion

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = suggestion

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = suggestion

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = suggestion

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = warning

# CA1850: Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1850.severity = suggestion

# CA1851: Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1851.severity = suggestion

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = suggestion

# CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = suggestion

# CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = suggestion

# CA1855: Prefer 'Clear' over 'Fill'
dotnet_diagnostic.CA1855.severity = suggestion

# CA1856: Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.CA1856.severity = error

# CA1857: A constant is expected for the parameter
dotnet_diagnostic.CA1857.severity = warning

# CA1858: Use 'StartsWith' instead of 'IndexOf'
dotnet_diagnostic.CA1858.severity = suggestion

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = suggestion

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = suggestion

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = suggestion

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = suggestion

# CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning

# CA2019: Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2019.severity = warning

# CA2020: Prevent behavioral change
dotnet_diagnostic.CA2020.severity = warning

# CA2021: Do not call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.CA2021.severity = warning

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = warning

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = warning

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = warning

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = warning

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = warning

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = suggestion

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = warning

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = warning

# CA2224: Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = warning

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = suggestion

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = warning

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = suggestion

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = warning

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = suggestion

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = warning

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = warning

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = warning

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = warning

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = suggestion

# CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = suggestion

# CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = suggestion

# CA2252: This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = error

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = suggestion

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = suggestion

# CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning

# CA2256: All members declared in parent interfaces must have an implementation
dotnet_diagnostic.CA2256.severity = error

# CA2257: Members defined on an interface with the 'DynamicallyAccessedMembersAttribute' should be static
dotnet_diagnostic.CA2257.severity = error

# CA2258: Providing a 'DynamicallyAccessedMembers' attribute on a generic type parameter is not supported
dotnet_diagnostic.CA2258.severity = error

# CA2259: 'ThreadStatic' only affects static fields
dotnet_diagnostic.CA2259.severity = warning

# CA2260: Use correct type parameter
dotnet_diagnostic.CA2260.severity = error

# CA2261: Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
dotnet_diagnostic.CA2261.severity = warning

# CA2300-CA2310: XML/Deserialization related rules - set to suggestion for library development
dotnet_diagnostic.CA2300.severity = suggestion
dotnet_diagnostic.CA2301.severity = suggestion
dotnet_diagnostic.CA2302.severity = suggestion
dotnet_diagnostic.CA2305.severity = suggestion
dotnet_diagnostic.CA2310.severity = suggestion

# IDE rules

# IDE0001: Simplify Names
dotnet_diagnostic.IDE0001.severity = suggestion

# IDE0002: Simplify Member Access
dotnet_diagnostic.IDE0002.severity = suggestion

# IDE0003: Remove qualification
dotnet_diagnostic.IDE0003.severity = silent

# IDE0005: Using directive is unnecessary
dotnet_diagnostic.IDE0005.severity = warning

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = warning

# IDE0016: Use 'throw' expression
dotnet_diagnostic.IDE0016.severity = suggestion

# IDE0017: Simplify object initialization
dotnet_diagnostic.IDE0017.severity = suggestion

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = suggestion

# IDE0019: Use pattern matching
dotnet_diagnostic.IDE0019.severity = suggestion

# IDE0020: Use pattern matching
dotnet_diagnostic.IDE0020.severity = suggestion

# IDE0021: Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = silent

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = silent

# IDE0023: Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = silent

# IDE0024: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = silent

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = silent

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = silent

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = silent

# IDE0028: Simplify collection initialization
dotnet_diagnostic.IDE0028.severity = suggestion

# IDE0029: Use coalesce expression
dotnet_diagnostic.IDE0029.severity = suggestion

# IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0030.severity = suggestion

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = suggestion

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = suggestion

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = suggestion

# IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = suggestion

# IDE0035: Unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = silent

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = suggestion

# IDE0039: Use local function
dotnet_diagnostic.IDE0039.severity = suggestion

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning

# IDE0041: Use 'is null' check
dotnet_diagnostic.IDE0041.severity = suggestion

# IDE0042: Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = suggestion

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = suggestion

# IDE0045: Convert to conditional expression
dotnet_diagnostic.IDE0045.severity = silent

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = silent

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = silent

# IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = silent

# IDE0049: Simplify names
dotnet_diagnostic.IDE0049.severity = warning

# IDE0050: Convert to tuple
dotnet_diagnostic.IDE0050.severity = suggestion

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = warning

# IDE0053: Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = silent

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = suggestion

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = suggestion

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = suggestion

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = silent

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = suggestion

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = suggestion

# IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = silent

# IDE0062: Make local function 'static'
dotnet_diagnostic.IDE0062.severity = suggestion

# IDE0063: Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = suggestion

# IDE0064: Make readonly fields writable
dotnet_diagnostic.IDE0064.severity = suggestion

# IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0065.severity = warning

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = suggestion

# IDE0070: Use 'System.HashCode'
dotnet_diagnostic.IDE0070.severity = suggestion

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = suggestion

# IDE0072: Add missing cases
dotnet_diagnostic.IDE0072.severity = suggestion

# IDE0073: The file header does not match the required text
dotnet_diagnostic.IDE0073.severity = silent

# IDE0074: Use compound assignment
dotnet_diagnostic.IDE0074.severity = suggestion

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = suggestion

# IDE0076: Invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity = warning

# IDE0077: Avoid legacy format target
dotnet_diagnostic.IDE0077.severity = suggestion

# IDE0078: Use pattern matching
dotnet_diagnostic.IDE0078.severity = suggestion

# IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = suggestion

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = suggestion

# IDE0081: Remove unnecessary suppression
dotnet_diagnostic.IDE0081.severity = suggestion

# IDE0082: 'typeof' can be converted to 'nameof'
dotnet_diagnostic.IDE0082.severity = suggestion

# IDE0083: Use pattern matching
dotnet_diagnostic.IDE0083.severity = suggestion

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = suggestion

# IDE0100: Remove redundant equality
dotnet_diagnostic.IDE0100.severity = suggestion

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = suggestion

# IDE0120: Simplify LINQ expression
dotnet_diagnostic.IDE0120.severity = suggestion

# IDE0130: Namespace does not match folder structure
dotnet_diagnostic.IDE0130.severity = suggestion

# IDE0150: Prefer 'null' check over type check
dotnet_diagnostic.IDE0150.severity = suggestion

# IDE0160: Convert to file-scoped namespace
dotnet_diagnostic.IDE0160.severity = warning

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.IDE0161.severity = warning

# IDE0170: Property pattern can be simplified
dotnet_diagnostic.IDE0170.severity = suggestion

# IDE0180: Use tuple to swap values
dotnet_diagnostic.IDE0180.severity = suggestion

# IDE0200: Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = suggestion

# IDE0210: Convert to top-level statements
dotnet_diagnostic.IDE0210.severity = silent

# IDE0211: Convert to 'Program.Main' style program
dotnet_diagnostic.IDE0211.severity = silent

# IDE0220: Add explicit cast
dotnet_diagnostic.IDE0220.severity = suggestion

# IDE0230: Use UTF-8 string literal
dotnet_diagnostic.IDE0230.severity = suggestion

# IDE0240: Remove redundant nullable directive
dotnet_diagnostic.IDE0240.severity = suggestion

# IDE0241: Remove unnecessary nullable directive
dotnet_diagnostic.IDE0241.severity = suggestion

# IDE0250: Make struct 'readonly'
dotnet_diagnostic.IDE0250.severity = suggestion

# IDE0251: Make member 'readonly'
dotnet_diagnostic.IDE0251.severity = suggestion

# IDE0260: Use pattern matching
dotnet_diagnostic.IDE0260.severity = suggestion

# IDE0270: Use coalesce expression
dotnet_diagnostic.IDE0270.severity = suggestion

# IDE0280: Use 'nameof'
dotnet_diagnostic.IDE0280.severity = suggestion

# IDE0290: Use primary constructor
dotnet_diagnostic.IDE0290.severity = suggestion

# IDE0300: Simplify collection initialization
dotnet_diagnostic.IDE0300.severity = suggestion

# IDE0301: Simplify collection initialization
dotnet_diagnostic.IDE0301.severity = suggestion

# IDE0302: Simplify collection initialization
dotnet_diagnostic.IDE0302.severity = suggestion

# IDE0305: Simplify collection initialization
dotnet_diagnostic.IDE0305.severity = suggestion

# Nullable reference type rules - treat as warnings for strict null safety
dotnet_diagnostic.CS8600.severity = warning # Converting null literal or possible null value to non-nullable type
dotnet_diagnostic.CS8601.severity = warning # Possible null reference assignment
dotnet_diagnostic.CS8602.severity = warning # Dereference of a possibly null reference
dotnet_diagnostic.CS8603.severity = warning # Possible null reference return
dotnet_diagnostic.CS8604.severity = warning # Possible null reference argument for parameter
dotnet_diagnostic.CS8605.severity = warning # Unboxing a possibly null value
dotnet_diagnostic.CS8618.severity = warning # Non-nullable variable must contain a non-null value when exiting constructor
dotnet_diagnostic.CS8619.severity = warning # Nullability of reference types in value doesn't match target type
dotnet_diagnostic.CS8620.severity = warning # Argument cannot be used for parameter due to differences in the nullability of reference types
dotnet_diagnostic.CS8625.severity = warning # Cannot convert null literal to non-nullable reference type
dotnet_diagnostic.CS8629.severity = warning # Nullable value type may be null
dotnet_diagnostic.CS8633.severity = warning # Nullability in constraints for type parameter doesn't match the constraints for type parameter in implicitly implemented interface method
dotnet_diagnostic.CS8634.severity = warning # The type cannot be used as type parameter in the generic type or method
dotnet_diagnostic.CS8714.severity = warning # The type cannot be used as type parameter in the generic type or method
